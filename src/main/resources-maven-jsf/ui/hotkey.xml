<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE component SYSTEM "../misc/component.dtd" [
<!ENTITY standard_uicomponent_attributes		SYSTEM "../entities/standard_uicomponent_attributes.xml">
]>
<component>
    <tag>hotkey</tag>
    <tagClass>org.primefaces.component.hotkey.HotkeyTag</tagClass>
    <componentClass>org.primefaces.component.hotkey.Hotkey</componentClass>
    <componentType>org.primefaces.component.Hotkey</componentType>
    <componentFamily>org.primefaces.component</componentFamily>
    <rendererType>org.primefaces.component.HotkeyRenderer</rendererType>
    <rendererClass>org.primefaces.component.hotkey.HotkeyRenderer</rendererClass>
    <parent>javax.faces.component.UICommand</parent>
    <description>HotKey is a generic key binding component that can bind any formation of keys to javascript event handlers or ajax calls.</description>
    <interfaces>
        <interface>
            <name>org.primefaces.component.api.AjaxSource</name>
        </interface>
    </interfaces>
    <attributes>
        &standard_uicomponent_attributes;
        <attribute>
            <name>actionListener</name>
            <required>false</required>
            <type>javax.faces.event.ActionListener</type>
            <method-signature>void actionListener(javax.faces.event.ActionEvent)</method-signature>
            <ignoreInComponent>true</ignoreInComponent>
            <description>An actionlistener that'd be processed in the partial request caused by uiajax.</description>
        </attribute>
        <attribute>
            <name>action</name>
            <required>false</required>
            <type>javax.el.MethodExpression</type>
            <method-signature>java.lang.Object action()</method-signature>
            <ignoreInComponent>true</ignoreInComponent>
            <description>A method expression that'd be processed in the partial request caused by uiajax.</description>
        </attribute>
        <attribute>
            <name>immediate</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <defaultValue>false</defaultValue>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Boolean value that determines the phaseId, when true actions are processed at apply_request_values, when false at invoke_application phase.</description>
        </attribute>
        <attribute>
            <name>bind</name>
            <required>true</required>
            <type>java.lang.String</type>
            <description>The Key binding. Required.</description>
        </attribute>
        <attribute>
            <name>update</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Client side id of the component(s) to be updated after async partial submit request.</description>
        </attribute>
        <attribute>
            <name>process</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Component id(s) to process partially instead of whole view.</description>
        </attribute>
        <attribute>
            <name>handler</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Javascript event handler to be executed when the key binding is pressed.</description>
        </attribute>
        <attribute>
            <name>onstart</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Javascript handler to execute before ajax request is begins.</description>
        </attribute>
        <attribute>
            <name>oncomplete</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Javascript handler to execute when ajax request is completed.</description>
        </attribute>
        <attribute>
            <name>onerror</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Javascript handler to execute when ajax request fails.</description>
        </attribute>
        <attribute>
            <name>onsuccess</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Javascript handler to execute when ajax request succeeds.</description>
        </attribute>
        <attribute>
            <name>global</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <defaultValue>true</defaultValue>
            <description>Global ajax requests are listened by ajaxStatus component, setting global to false will not trigger ajaxStatus. Default is true.</description>
        </attribute>
        <attribute>
            <name>delay</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>If less than delay milliseconds elapses between calls to request() only the most recent one is sent and all other requests are discarded. The default value of this option is null. If the value of delay is the literal string 'none' without the quotes or the default, no delay is used.</description>
        </attribute>
        <attribute>
            <name>timeout</name>
            <required>false</required>
            <type>java.lang.Integer</type>
            <defaultValue>0</defaultValue>
            <description>Defines the timeout for the ajax request.</description>
        </attribute>
        <attribute>
            <name>async</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <defaultValue>false</defaultValue>
            <description>When set to true, ajax requests are not queued. Default is false.</description>
        </attribute>
        <attribute>
            <name>partialSubmit</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <defaultValue>false</defaultValue>
            <description>When enabled, only values related to partially processed components would be serialized for ajax
                instead of whole form.</description>
        </attribute>
        <attribute>
            <name>resetValues</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <defaultValue>false</defaultValue>
            <description>If true, indicate that this particular Ajax transaction is a value reset transaction. This will cause resetValue() to be called on any EditableValueHolder instances encountered as a result of this ajax transaction. If not specified, or the value is false, no such indication is made.</description>
        </attribute>
        <attribute>
            <name>ignoreAutoUpdate</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <defaultValue>false</defaultValue>
            <description>If true, components which autoUpdate="true" will not be updated for this request. If not specified, or the value is false, no such indication is made.</description>
        </attribute>
        <attribute>
            <name>partialSubmitFilter</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Selector to use when partial submit is on, default is ":input" to select all descendant inputs of a partially processed components.</description>
        </attribute>
        <attribute>
            <name>form</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Form to serialize for an ajax request. Default is the enclosing form.</description>
        </attribute>
    </attributes>
    <resources>
        <resource>
            <name>jquery/jquery.js</name>
        </resource>
        <resource>
            <name>jquery/jquery-plugins.js</name>
        </resource>
        <resource>
            <name>core.js</name>
        </resource>
        <resource>
            <name>hotkey/hotkey.js</name>
        </resource>
    </resources>
</component>
