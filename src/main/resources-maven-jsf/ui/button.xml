<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE component SYSTEM "../misc/component.dtd" [
<!ENTITY standard_uicomponent_attributes		SYSTEM "../entities/standard_uicomponent_attributes.xml">
<!ENTITY widget_var_attribute					SYSTEM "../entities/widget_var_attribute.xml">
]>
<component>
    <tag>button</tag>
    <tagClass>org.primefaces.component.button.ButtonTag</tagClass>
    <componentClass>org.primefaces.component.button.Button</componentClass>
    <componentType>org.primefaces.component.Button</componentType>
    <componentFamily>org.primefaces.component</componentFamily>
    <rendererType>org.primefaces.component.ButtonRenderer</rendererType>
    <rendererClass>org.primefaces.component.button.ButtonRenderer</rendererClass>
    <parent>javax.faces.component.html.HtmlOutcomeTargetButton</parent>
    <description>Button is an extension to the standard h:button component with skinning capabilities.</description>
    <interfaces>
        <interface>
            <name>org.primefaces.component.api.Widget</name>
        </interface>
        <interface>
            <name>org.primefaces.component.api.UIOutcomeTarget</name>
        </interface>
    </interfaces>
    <attributes>
        &standard_uicomponent_attributes;
        &widget_var_attribute;
        <attribute>
            <name>value</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Value of the component than can be either an EL expression of a literal text.</description>
        </attribute>
        <attribute>
            <name>outcome</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Used to resolve a navigation case.</description>
        </attribute>
        <attribute>
            <name>includeViewParams</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Whether to include page parameters in target URI. Default is false.</description>
        </attribute>
        <attribute>
            <name>fragment</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Identifier of the target page which should be scrolled to.</description>
        </attribute>
        <attribute>
            <name>disabled</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <defaultValue>false</defaultValue>
            <description>Disables button.</description>
        </attribute>
        <attribute>
            <name>accesskey</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Access key that when pressed transfers focus to button.</description>
        </attribute>
        <attribute>
            <name>alt</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Alternate textual description.</description>
        </attribute>
        <attribute>
            <name>dir</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Direction indication for text that does not inherit directionality. Valid values are LTR and RTL.</description>
        </attribute>
        <attribute>
            <name>image</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Style class for button icon.</description>
        </attribute>
        <attribute>
            <name>lang</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Code describing the language used in the generated markup for this component.</description>
        </attribute>
        <attribute>
            <name>tabindex</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Position in the tabbing order.</description>
        </attribute>
        <attribute>
            <name>title</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Advisory tooltip informaton.</description>
        </attribute>
        <attribute>
            <name>readonly</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Makes button read only.</description>
        </attribute>
        <attribute>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Inline style of the button.</description>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Style class of the button.</description>
        </attribute>
        <attribute>
            <name>onblur</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when button loses focus.</description>
        </attribute>
        <attribute>
            <name>onchange</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when button loses focus and its value has been modified since gaining focus.</description>
        </attribute>
        <attribute>
            <name>onclick</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when button is clicked.</description>
        </attribute>
        <attribute>
            <name>ondblclick</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when button is double clicked.</description>
        </attribute>
        <attribute>
            <name>onfocus</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when button receives focus.</description>
        </attribute>
        <attribute>
            <name>onkeydown</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a key is pressed down over button.</description>
        </attribute>
        <attribute>
            <name>onkeypress</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a key is pressed and released over button.</description>
        </attribute>
        <attribute>
            <name>onkeyup</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a key is released over button.</description>
        </attribute>
        <attribute>
            <name>onmousedown</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a pointer button is pressed down over button.</description>
        </attribute>
        <attribute>
            <name>onmousemove</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a pointer button is moved within button.</description>
        </attribute>
        <attribute>
            <name>onmouseout</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a pointer button is moved away from button.</description>
        </attribute>
        <attribute>
            <name>onmouseover</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a pointer button is moved onto button.</description>
        </attribute>
        <attribute>
            <name>onmouseup</name>
            <required>false</required>
            <type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a pointer button is released over button.</description>
        </attribute>
        <attribute>
            <name>icon</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Icon of the button.</description>
        </attribute>
        <attribute>
            <name>iconPos</name>
            <required>false</required>
            <type>java.lang.String</type>
            <defaultValue>left</defaultValue>
            <description>Position of the icon, default value is left.</description>
        </attribute>
        <attribute>
            <name>href</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Resource to link to.</description>
        </attribute>
        <attribute>
            <name>target</name>
            <required>false</required>
            <type>java.lang.String</type>
            <defaultValue>_self</defaultValue>
            <description>The window target. Default _self.</description>
        </attribute>
        <attribute>
            <name>escape</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <defaultValue>true</defaultValue>
            <description>Defines if label of the component is escaped or not.</description>
        </attribute>
        <attribute>
            <name>inline</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <defaultValue>false</defaultValue>
            <description>Displays button inline instead of fitting the content width, only used by mobile.</description>
        </attribute>
        <attribute>
            <name>disableClientWindow</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <defaultValue>false</defaultValue>
            <description>Disable appending the <code>ClientWindow</code> on the rendering of this element.</description>
        </attribute>
    </attributes>
    <resources>
        <resource>
            <name>components.css</name>
        </resource>
        <resource>
            <name>jquery/jquery.js</name>
        </resource>
        <resource>
            <name>core.js</name>
        </resource>
        <resource>
            <name>components.js</name>
        </resource>
    </resources>
</component>