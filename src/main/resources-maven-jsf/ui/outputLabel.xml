<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE component SYSTEM "../misc/component.dtd" [
<!ENTITY standard_uicomponent_attributes		SYSTEM "../entities/standard_uicomponent_attributes.xml">
<!ENTITY widget_var_attribute					SYSTEM "../entities/widget_var_attribute.xml">
]>
<component>
	<tag>outputLabel</tag>
	<tagClass>org.primefaces.component.outputlabel.OutputLabelTag</tagClass>
	<componentClass>org.primefaces.component.outputlabel.OutputLabel</componentClass>
	<componentType>org.primefaces.component.OutputLabel</componentType>
	<componentFamily>org.primefaces.component</componentFamily>
	<rendererType>org.primefaces.component.OutputLabelRenderer</rendererType>
	<rendererClass>org.primefaces.component.outputlabel.OutputLabelRenderer</rendererClass>
	<parent>javax.faces.component.html.HtmlOutputLabel</parent>
    <description>OutputLabel is an extension to the standard outputLabel.</description>
	<attributes>
		&standard_uicomponent_attributes;
        <attribute>
			<name>value</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Label to display.</description>
		</attribute>
        <attribute>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>The accesskey attribute is a standard HTML attribute that sets the access key that transfers focus to this element when pressed.</description>
		</attribute>
        <attribute>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Direction indication for text that does not inherit directionality. Valid values are LTR and RTL.</description>
		</attribute>
        <attribute>
			<name>escape</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Defines if value should be escaped or not.</description>
		</attribute>
        <attribute>
			<name>for</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Id of the associated input component.</description>
		</attribute>
		<attribute>
			<name>lang</name>
            <required>false</required>
			<type>java.lang.String</type>
            <ignoreInComponent>true</ignoreInComponent>
            <description>The lang attribute is a standard HTML attribute that sets the code describing the language to be used in the markup generated by this component..</description>
		</attribute>
		<attribute>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Position in the tabbing order.</description>
		</attribute>
		<attribute>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Advisory tooltip informaton.</description>
		</attribute>
		<attribute>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Inline style of the component.</description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Style class of the component.</description>
		</attribute>
		<attribute>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when component loses focus.</description>
		</attribute>
		<attribute>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when component is clicked.</description>
        </attribute>
		<attribute>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when component is double clicked.</description>
		</attribute>
		<attribute>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when component receives focus.</description>
		</attribute>
		<attribute>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a key is pressed down over component.</description>
		</attribute>
		<attribute>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a key is pressed and released over component.</description>
		</attribute>
		<attribute>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a key is released over component.</description>
		</attribute>
		<attribute>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a pointer button is pressed down over component.</description>
		</attribute>
		<attribute>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a pointer button is moved within component.</description>
		</attribute>
		<attribute>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a pointer button is moved away from component.</description>
		</attribute>
		<attribute>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a pointer button is moved onto component.</description>
		</attribute>
		<attribute>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a pointer button is released over component.</description>
		</attribute>
        <attribute>
			<name>indicateRequired</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
            <defaultValue>true</defaultValue>
            <description>Displays * symbol if the input is required, default value is true.</description>
		</attribute>
            <attribute>
                    <name>converter</name>
                    <required>false</required>
                    <type>java.faces.convert.Converter</type>
                    <ignoreInComponent>true</ignoreInComponent>
                <description>An el expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance.
                In case it's a static text, it must refer to a converter id.</description>
            </attribute>
	</attributes>
</component>
