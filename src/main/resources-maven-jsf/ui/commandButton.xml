<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE component SYSTEM "../misc/component.dtd" [
<!ENTITY standard_uicomponent_attributes		SYSTEM "../entities/standard_uicomponent_attributes.xml">
<!ENTITY output_component_attributes			SYSTEM "../entities/output_component_attributes.xml">
<!ENTITY command_component_attributes			SYSTEM "../entities/command_component_attributes.xml">
<!ENTITY widget_var_attribute					SYSTEM "../entities/widget_var_attribute.xml">
<!ENTITY html_command_button_attributes			SYSTEM "../entities/html_command_button_attributes.xml">
]>
<component>
	<tag>commandButton</tag>
	<tagClass>org.primefaces.component.commandbutton.CommandButtonTag</tagClass>
	<componentClass>org.primefaces.component.commandbutton.CommandButton</componentClass>
	<componentType>org.primefaces.component.CommandButton</componentType>
	<componentFamily>org.primefaces.component</componentFamily>
	<rendererType>org.primefaces.component.CommandButtonRenderer</rendererType>
	<rendererClass>org.primefaces.component.commandbutton.CommandButtonRenderer</rendererClass>
	<parent>javax.faces.component.html.HtmlCommandButton</parent>
    <description>CommandButton is an extended version of standard JSF commandButton with ajax and skinning features.</description>
	<interfaces>
		<interface>
			<name>org.primefaces.component.api.AjaxSource</name>
		</interface>
        <interface>
			<name>org.primefaces.component.api.Widget</name>
		</interface>
        <interface>
			<name>org.primefaces.component.api.Confirmable</name>
		</interface>
        <interface>
			<name>org.primefaces.component.api.PrimeClientBehaviorHolder</name>
		</interface>
	</interfaces>
	<attributes>
		&command_component_attributes;
		&widget_var_attribute;
		<attribute>
			<name>ajax</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
			<defaultValue>true</defaultValue>
            <description>Specifies the submit mode, when set to true (default), submit would be made with Ajax.</description>
		</attribute>
		<attribute>
			<name>async</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
			<defaultValue>false</defaultValue>
            <description>When set to true, ajax requests are not queued.</description>
		</attribute>
		<attribute>
			<name>process</name>
			<required>false</required>
			<type>java.lang.String</type>
            <description>Component(s) to process partially instead of whole view.</description>
		</attribute>
		<attribute>
			<name>update</name>
			<required>false</required>
			<type>java.lang.String</type>
            <description>Component(s) to be updated with ajax.</description>
		</attribute>
		<attribute>
			<name>onstart</name>
			<required>false</required>
			<type>java.lang.String</type>
            <description>Client side callback to execute before ajax request is begins.</description>
		</attribute>
		<attribute>
			<name>oncomplete</name>
			<required>false</required>
			<type>java.lang.String</type>
            <description>Client side callback to execute when ajax request is completed.</description>
		</attribute>
		<attribute>
			<name>onerror</name>
			<required>false</required>
			<type>java.lang.String</type>
            <description>Client side callback to execute when ajax request fails.</description>
		</attribute>
		<attribute>
			<name>onsuccess</name>
			<required>false</required>
			<type>java.lang.String</type>
            <description>Client side callback to execute when ajax request succeeds.</description>
		</attribute>
		<attribute>
			<name>global</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
			<defaultValue>true</defaultValue>
            <description>Defines whether to trigger ajaxStatus or not.</description>
		</attribute>
		<attribute>
			<name>delay</name>
			<required>false</required>
			<type>java.lang.String</type>
            <description>If less than delay milliseconds elapses between calls to request() only the most recent one is sent and all other requests are discarded. The default value of this option is null. If the value of delay is the literal string 'none' without the quotes or the default, no delay is used.</description>
		</attribute>
		<attribute>
			<name>timeout</name>
			<required>false</required>
                        <defaultValue>0</defaultValue>
			<type>java.lang.Integer</type>
            <description>Defines the timeout for the ajax request.</description>
		</attribute>
        <attribute>
			<name>partialSubmit</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
			<defaultValue>false</defaultValue>
            <description>When enabled, only values related to partially processed components would be serialized for ajax
            instead of whole form.</description>
		</attribute>
        <attribute>
			<name>resetValues</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
			<defaultValue>false</defaultValue>
            <description>If true, indicate that this particular Ajax transaction is a value reset transaction. This will cause resetValue() to be called on any EditableValueHolder instances encountered as a result of this ajax transaction. If not specified, or the value is false, no such indication is made.</description>
		</attribute>
        <attribute>
			<name>ignoreAutoUpdate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
			<defaultValue>false</defaultValue>
            <description>If true, components which autoUpdate="true" will not be updated for this request. If not specified, or the value is false, no such indication is made.</description>
		</attribute>
		<attribute>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Access key that when pressed transfers focus to the button.</description>
		</attribute>
		<attribute>
			<name>alt</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Alternate textual description of the button.</description>
		</attribute>
		<attribute>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Direction indication for text that does not inherit directionality. Valid values are LTR and RTL.</description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Disables the button.</description>
		</attribute>
		<attribute>
			<name>image</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Style class representing the button icon.</description>
		</attribute>
		<attribute>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>A localized user presentable name.</description>
		</attribute>
		<attribute>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Code describing the language used in the generated markup for this component.</description>
		</attribute>
		<attribute>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Position of the button element in the tabbing order.</description>
		</attribute>
		<attribute>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Advisory tooltip informaton.</description>
		</attribute>
		<attribute>
			<name>type</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Sets the behavior of the button. Default is submit.</description>
		</attribute>
		<attribute>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Inline style of the button element.</description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Style class of the button element.</description>
		</attribute>
		<attribute>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when button loses focus.</description>
		</attribute>
		<attribute>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when button loses focus and its value has been modified since gaining focus.</description>
		</attribute>
		<attribute>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when button is clicked.</description>
		</attribute>
		<attribute>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when button is double clicked.</description>
		</attribute>
		<attribute>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when button receives focus.</description>
		</attribute>
		<attribute>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a key is pressed down over button.</description>
		</attribute>
		<attribute>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a key is pressed and released over button.</description>
		</attribute>
		<attribute>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a key is released over button.</description>
		</attribute>
		<attribute>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a pointer button is pressed down over button.</description>
		</attribute>
		<attribute>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a pointer button is moved within button.</description>
		</attribute>
		<attribute>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a pointer button is moved away from button.</description>
		</attribute>
		<attribute>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a pointer button is moved onto button.</description>
		</attribute>
		<attribute>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when a pointer button is released over button.</description>
		</attribute>
		<attribute>
			<name>onselect</name>
			<required>false</required>
			<type>java.lang.String</type>
			<ignoreInComponent>true</ignoreInComponent>
            <description>Client side callback to execute when text within button is selected by user.</description>
		</attribute>
        <attribute>
			<name>icon</name>
			<required>false</required>
			<type>java.lang.String</type>
            <description>Icon of the button.</description>
		</attribute>
        <attribute>
			<name>iconPos</name>
			<required>false</required>
			<type>java.lang.String</type>
            <defaultValue>left</defaultValue>
            <description>Position of the icon, default value is left.</description>
		</attribute>
        <attribute>
			<name>inline</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
            <defaultValue>false</defaultValue>
            <description>Displays button inline instead of fitting the content width, only used by mobile.</description>
		</attribute>
        <attribute>
			<name>escape</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
            <defaultValue>true</defaultValue>
            <description>Defines if label of the component is escaped or not.</description>
		</attribute>
        <attribute>
			<name>validateClient</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
            <defaultValue>false</defaultValue>
            <description>When set to true client side validation is enabled, global setting is required to be enabled as a prerequisite.</description>
		</attribute>
        <attribute>
			<name>partialSubmitFilter</name>
			<required>false</required>
			<type>java.lang.String</type>
            <description>Selector to use when partial submit is on, default is ":input" to select all descendant inputs of a partially processed components.</description>
		</attribute>
        <attribute>
			<name>form</name>
			<required>false</required>
			<type>java.lang.String</type>
            <description>Form to serialize for an ajax request. Default is the enclosing form.</description>
		</attribute>
        <attribute>
			<name>renderDisabledClick</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
            <defaultValue>true</defaultValue>
            <description>When enabled, click event can be added to disabled button</description>
		</attribute>
	</attributes>
	<resources>
        <resource>
			<name>components.css</name>
		</resource>
		<resource>
			<name>jquery/jquery.js</name>
		</resource>
        <resource>
			<name>jquery/jquery-plugins.js</name>
		</resource>
        <resource>
			<name>core.js</name>
		</resource>
		<resource>
			<name>components.js</name>
		</resource>
	</resources>
</component>