<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE component SYSTEM "../misc/component.dtd" [
<!ENTITY standard_uicomponent_attributes		SYSTEM "../entities/standard_uicomponent_attributes.xml">
<!ENTITY output_component_attributes			SYSTEM "../entities/output_component_attributes.xml">
<!ENTITY input_component_attributes				SYSTEM "../entities/input_component_attributes.xml">
<!ENTITY widget_var_attribute					SYSTEM "../entities/widget_var_attribute.xml">
]>
<component>
    <tag>fileUpload</tag>
    <tagClass>org.primefaces.component.fileupload.FileUploadTag</tagClass>
    <componentHandlerClass>org.primefaces.component.fileupload.FileUploadHandler</componentHandlerClass>
    <componentClass>org.primefaces.component.fileupload.FileUpload</componentClass>
    <componentType>org.primefaces.component.FileUpload</componentType>
    <componentFamily>org.primefaces.component</componentFamily>
    <rendererType>org.primefaces.component.FileUploadRenderer</rendererType>
    <rendererClass>org.primefaces.component.fileupload.FileUploadRenderer</rendererClass>
    <parent>javax.faces.component.UIInput</parent>
    <description>
        FileUpload goes beyond the browser input type="file" functionality and features a flash-javascript solution for uploading files. 
        File filtering, multiple uploads, partial page rendering and progress tracking are the significant features compared to legacy fileUploads.
    </description>
    <interfaces>
        <interface>
            <name>org.primefaces.component.api.Widget</name>
        </interface>
    </interfaces>
    <attributes>
		&input_component_attributes;
		&widget_var_attribute;
        <attribute>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Inline style of the main component.</description>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Style class of the component.</description>
        </attribute>
        <attribute>
            <name>update</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Component(s) to be updated after fileupload completes.</description>
        </attribute>
        <attribute>
            <name>process</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Component(s) to be processed during fileupload request.</description>
        </attribute>
        <attribute>
            <name>fileUploadListener</name>
            <required>false</required>
            <type>javax.el.MethodExpression</type>
            <method-signature>void fileUploadListener(org.primefaces.event.FileUploadEvent)</method-signature>
            <description>Method expression to listen file upload events.</description>
        </attribute>
        <attribute>
            <name>multiple</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <defaultValue>false</defaultValue>
            <description>Allows choosing of multi file uploads from native file browse dialog, turned off by default.</description>
        </attribute>
        <attribute>
            <name>auto</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <defaultValue>false</defaultValue>
            <description>When set to true, selecting a file starts the upload process implicitly. Default is false.</description>
        </attribute>
        <attribute>
            <name>label</name>
            <required>false</required>
            <type>java.lang.String</type>
            <defaultValue>Choose</defaultValue>
            <description>Label of the browse button, default is 'Choose'.</description>
        </attribute>
        <attribute>
            <name>allowTypes</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Regular expression for accepted file types, e.g. /(\.|\/)(gif|jpe?g|png)$/</description>
        </attribute>
        <attribute>
            <name>fileLimit</name>
            <required>false</required>
            <type>java.lang.Integer</type>
            <defaultValue>java.lang.Integer.MAX_VALUE</defaultValue>
            <description>Maximum number of files to be uploaded.</description>
        </attribute>
        <attribute>
            <name>sizeLimit</name>
            <required>false</required>
            <type>java.lang.Long</type>
            <defaultValue>java.lang.Long.MAX_VALUE</defaultValue>
            <description>Individual file size limit in bytes. Default is unlimited.</description>
        </attribute>
        <attribute>
            <name>mode</name>
            <required>false</required>
            <type>java.lang.String</type>
            <defaultValue>advanced</defaultValue>
            <description>Mode of the uploader, valid values are "simple" and "advanced".</description>
        </attribute>
        <attribute>
            <name>uploadLabel</name>
            <required>false</required>
            <type>java.lang.String</type>
            <defaultValue>Upload</defaultValue>
            <description>Label of the upload button, default is 'Upload'.</description>
        </attribute>
        <attribute>
            <name>cancelLabel</name>
            <required>false</required>
            <type>java.lang.String</type>
            <defaultValue>Cancel</defaultValue>
            <description>Label of the cancel button, default is 'Cancel'.</description>
        </attribute>
        <attribute>
            <name>invalidSizeMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Message to display when file size validation fails.</description>
        </attribute>
        <attribute>
            <name>invalidFileMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Message to display when file limit validation fails.</description>
        </attribute>
        <attribute>
            <name>fileLimitMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Message to display when file count validation fails.</description>
        </attribute>
        <attribute>
            <name>dragDropSupport</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <defaultValue>true</defaultValue>
            <description>Specifies dragdrop based file selection from filesystem, default is true and works only on supported browsers.</description>
        </attribute>
        <attribute>
            <name>onstart</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Callback to execute at the beginning of fileupload.</description>
        </attribute>
        <attribute>
            <name>oncomplete</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Callback to execute after fileupload request completes.</description>
        </attribute>
        <attribute>
            <name>onerror</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Callback to execute after fileupload request fails.</description>
        </attribute>
        <attribute>
            <name>disabled</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <defaultValue>false</defaultValue>
            <description>Disables fileupload user interface interaction.</description>
        </attribute>
        <attribute>
            <name>messageTemplate</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>Message template to use when displaying file validation errors. Default is "{name} {size}".</description>
        </attribute>
        <attribute>
            <name>previewWidth</name>
            <required>false</required>
            <type>java.lang.Integer</type>
            <defaultValue>80</defaultValue>
            <description>Width for image previews in pixels. Default value is 80.</description>
        </attribute>
        <attribute>
            <name>skinSimple</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <defaultValue>false</defaultValue>
            <description>Applies theming to simple uploader, default is false.</description>
        </attribute>
        <attribute>
            <name>accept</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>To filter files in native file browser dialog.</description>
        </attribute>
        <attribute>
            <name>sequential</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <defaultValue>false</defaultValue>
            <description>Uploads are concurrent by default set this option to true for sequential uploads.</description>
        </attribute>
    </attributes>
    <resources>
        <resource>
            <name>components.css</name>
        </resource>
        <resource>
            <name>fileupload/fileupload.css</name>
        </resource>
        <resource>
            <name>jquery/jquery.js</name>
        </resource>
        <resource>
            <name>jquery/jquery-plugins.js</name>
        </resource>
        <resource>
            <name>core.js</name>
        </resource>
        <resource>
            <name>components.js</name>
        </resource>
        <resource>
            <name>fileupload/fileupload.js</name>
        </resource>
    </resources>
</component>