import { zh_CN } from "primelocale/js/zh_CN.js";
import { zh_TW } from "primelocale/js/zh_TW.js";

if (window.PrimeFaces) {
  /* Simplified Chinese (zh-CN) Language | Written by IKKI | 2021-12-25 */
  PrimeFaces.locales["zh"] = zh_CN;

  // custom PF labels
  PrimeFaces.locales["zh"] = $.extend(true, {}, PrimeFaces.locales["zh"], {
    allDayText: "全天",
    day: "日",
    hourText: "时",
    isRTL: false,
    list: "列表",
    millisecondText: "毫秒",
    minuteText: "分",
    month: "月",
    moreLinkText: "更多...",
    noEventsText: "无活动",
    secondText: "秒",
    timeOnlyTitle: "仅时间",
    timeText: "时间",
    unexpectedError: "意外的错误",
    week: "周",
    weekNumberTitle: "周",
    year: "年",
    yearSuffix: "",
    aria: {
      "colorpicker.ALPHASLIDER": "不透明度滑块",
      "colorpicker.CLEAR": "清除选定的颜色",
      "colorpicker.CLOSE": "关闭颜色选择器",
      "colorpicker.FORMAT": "颜色格式",
      "colorpicker.HUESLIDER": "色相滑块",
      "colorpicker.INPUT": "颜色值字段",
      "colorpicker.INSTRUCTION": "饱和度和亮度选择器。使用上、下、左、右箭头键进行选择。",
      "colorpicker.MARKER": "饱和度：{s}。亮度：{v}。",
      "colorpicker.OPEN": "打开颜色选择器",
      "colorpicker.SWATCH": "色样",
      "datatable.sort.ASC": "升序排列",
      "datatable.sort.DESC": "降序排列",
      "datatable.sort.NONE": "无序排列",
      "messages.ERROR": "错误",
      "messages.FATAL": "严重错误",
      "messages.INFO": "信息",
      "messages.WARN": "警告",
      "spinner.DECREASE": "减少价值",
      "spinner.INCREASE": "增加价值",
      "switch.OFF": "关",
      "switch.ON": "开",
    },
    messages: {
      "jakarta.faces.component.UIInput.REQUIRED": "验证失败！“{0}”是必填项！",
      "jakarta.faces.converter.BigDecimalConverter.DECIMAL": "{2}：“{0}”必须是大浮点数型！",
      "jakarta.faces.converter.BigDecimalConverter.DECIMAL_detail": "{2}：“{0}”必须是不可变的有符号的任意精度的浮点数！后面可能跟小数点和分数。例如：{1}。",
      "jakarta.faces.converter.BigIntegerConverter.BIGINTEGER": "{2}：“{0}”必须是大整数型！",
      "jakarta.faces.converter.BigIntegerConverter.BIGINTEGER_detail": "{2}：“{0}”必须是不可变的任意精度的整数！例如：{1}。",
      "jakarta.faces.converter.BooleanConverter.BOOLEAN": "{1}：“{0}”必须是布尔型！",
      "jakarta.faces.converter.BooleanConverter.BOOLEAN_detail": "{1}：“{0}”必须是“true”或者“false”！“true”以外的任何值都将被视为“false”。",
      "jakarta.faces.converter.ByteConverter.BYTE": "{2}：“{0}”必须是字节型！",
      "jakarta.faces.converter.ByteConverter.BYTE_detail": "{2}：“{0}”必须是负2的7次方到2的7次方减1之间的整数！例如：{1}。",
      "jakarta.faces.converter.CharacterConverter.CHARACTER": "{1}：“{0}”必须是字符型！",
      "jakarta.faces.converter.CharacterConverter.CHARACTER_detail": "{1}：“{0}”必须是一个有效的ASCII字符。",
      "jakarta.faces.converter.DateTimeConverter.DATE": "{2}：“{0}”必须是日期型！",
      "jakarta.faces.converter.DateTimeConverter.DATE_detail": "{2}：“{0}”必须是有效的日期数据类型！例如：{1}。",
      "jakarta.faces.converter.DateTimeConverter.DATETIME": "{2}：“{0}”必须是日期时间型！",
      "jakarta.faces.converter.DateTimeConverter.DATETIME_detail": "{2}：“{0}”必须是有效的日期时间数据类型！例如：{1}。",
      "jakarta.faces.converter.DateTimeConverter.PATTERN_TYPE": "{1}：必须指定“格式”或“类型”属性才能转换“{0}”。",
      "jakarta.faces.converter.DateTimeConverter.TIME": "{2}：“{0}”必须是时间型！",
      "jakarta.faces.converter.DateTimeConverter.TIME_detail": "{2}：“{0}”必须是有效的时间数据类型！例如：{1}。",
      "jakarta.faces.converter.DoubleConverter.DOUBLE": "{2}：“{0}”必须是双精度浮点型！",
      "jakarta.faces.converter.DoubleConverter.DOUBLE_detail": "{2}：“{0}”必须是4.9E-324到1.7976931348623157E308之间的浮点数！例如：{1}。",
      "jakarta.faces.converter.FloatConverter.FLOAT": "{2}：“{0}”必须是单精度浮点型！",
      "jakarta.faces.converter.FloatConverter.FLOAT_detail": "{2}：“{0}”必须是1.4E-45到3.4028235E38之间的浮点数！例如：{1}。",
      "jakarta.faces.converter.IntegerConverter.INTEGER": "{2}：“{0}”必须是整型！",
      "jakarta.faces.converter.IntegerConverter.INTEGER_detail": "{2}：“{0}”必须是负2的31次方到2的31次方减1之间的整数！例如：{1}。",
      "jakarta.faces.converter.LongConverter.LONG": "{2}：“{0}”必须是长整型！",
      "jakarta.faces.converter.LongConverter.LONG_detail": "{2}：“{0}”必须是负2的63次方到2的63次方减1之间的整数！例如：{1}。",
      "jakarta.faces.converter.NumberConverter.CURRENCY": "{2}：“{0}”必须是货币值型！",
      "jakarta.faces.converter.NumberConverter.CURRENCY_detail": "{2}：“{0}”必须是有效的货币值数据类型！例如：{1}.",
      "jakarta.faces.converter.NumberConverter.NUMBER": "{2}：“{0}”必须是数字型！",
      "jakarta.faces.converter.NumberConverter.NUMBER_detail": "{2}：“{0}”必须是有效的数字数据类型！例如：{1}.",
      "jakarta.faces.converter.NumberConverter.PATTERN": "{2}：“{0}”必须是数字格式！",
      "jakarta.faces.converter.NumberConverter.PATTERN_detail": "{2}：“{0}”必须是有效的数字格式数据类型！例如：{1}.",
      "jakarta.faces.converter.NumberConverter.PERCENT": "{2}：“{0}”必须是百分比型！",
      "jakarta.faces.converter.NumberConverter.PERCENT_detail": "{2}：“{0}”必须是有效的百分比数据类型！例如：{1}.",
      "jakarta.faces.converter.ShortConverter.SHORT": "{2}：“{0}”必须是短整型！",
      "jakarta.faces.converter.ShortConverter.SHORT_detail": "{2}：“{0}”必须是负2的15次方到2的15次方减1之间的整数！例如：{1}。",
      "jakarta.faces.validator.BeanValidator.MESSAGE": "{1}: {0}",
      "jakarta.faces.validator.DoubleRangeValidator.MAXIMUM": "{1}：验证失败！值大于允许的最大值“{0}”。",
      "jakarta.faces.validator.DoubleRangeValidator.MINIMUM": "{1}：验证失败！值小于允许的最小值“{0}”。",
      "jakarta.faces.validator.DoubleRangeValidator.NOT_IN_RANGE": "{2}：验证失败！值不在“{0}和“{1}”之间。",
      "jakarta.faces.validator.DoubleRangeValidator.TYPE": "{0}: 验证失败！值的类型不正确。",
      "jakarta.faces.validator.LengthValidator.MAXIMUM": "{1}：验证失败！长度大于允许的最大值“{0}”。",
      "jakarta.faces.validator.LengthValidator.MINIMUM": "{1}：验证失败！长度小于允许的最小值“{0}”。",
      "jakarta.faces.validator.LongRangeValidator.MAXIMUM": "{1}：验证失败！值大于允许的最大值“{0}”。",
      "jakarta.faces.validator.LongRangeValidator.MINIMUM": "{1}：验证失败！值小于允许的最小值“{0}”。",
      "jakarta.faces.validator.LongRangeValidator.NOT_IN_RANGE": "{2}：验证失败！值不在“{0}”和“{1}”之间。",
      "jakarta.faces.validator.LongRangeValidator.TYPE": "{0}: 验证失败！值的类型不正确。",
      "jakarta.faces.validator.RegexValidator.MATCH_EXCEPTION": "正则表达式错误！",
      "jakarta.faces.validator.RegexValidator.MATCH_EXCEPTION_detail": "“{0}”的正则表达式错误！",
      "jakarta.faces.validator.RegexValidator.NOT_MATCHED": "正则表达式格式不匹配！",
      "jakarta.faces.validator.RegexValidator.NOT_MATCHED_detail": "“{0}”的正则表达式格式不匹配！",
      "jakarta.faces.validator.RegexValidator.PATTERN_NOT_SET": "必须设置正则表达式格式！",
      "jakarta.faces.validator.RegexValidator.PATTERN_NOT_SET_detail": "正则表达式格式必须设置为非空值！",
      "jakarta.validation.constraints.AssertFalse.message": "必定是假的",
      "jakarta.validation.constraints.AssertTrue.message": "必须是真的",
      "jakarta.validation.constraints.DecimalMax.message": "必须小于或等于 {0}",
      "jakarta.validation.constraints.DecimalMin.message": "必须大于或等于 {0}",
      "jakarta.validation.constraints.Digits.message": "数值超出范围（应为 &lt;{0} 位数字&gt;.&lt;{1} 位数字&gt;）",
      "jakarta.validation.constraints.Email.message": "必须是格式正确的电子邮件地址",
      "jakarta.validation.constraints.Future.message": "必须是未来日期",
      "jakarta.validation.constraints.FutureOrPresent.message": "必须是现在或将来的日期",
      "jakarta.validation.constraints.Max.message": "必须小于或等于 {0}",
      "jakarta.validation.constraints.Min.message": "必须大于或等于 {0}",
      "jakarta.validation.constraints.Negative.message": "必须小于 0",
      "jakarta.validation.constraints.NegativeOrZero.message": "必须小于或等于 0",
      "jakarta.validation.constraints.NotBlank.message": "不能为空",
      "jakarta.validation.constraints.NotEmpty.message": "不能为空",
      "jakarta.validation.constraints.NotNull.message": "不能为空",
      "jakarta.validation.constraints.Null.message": "必须为空",
      "jakarta.validation.constraints.Past.message": "必须是过去的日期",
      "jakarta.validation.constraints.PastOrPresent.message": "必须是过去或现在的日期",
      "jakarta.validation.constraints.Pattern.message": "必须匹配“{0}”",
      "jakarta.validation.constraints.Positive.message": "必须大于 0",
      "jakarta.validation.constraints.PositiveOrZero.message": "必须大于或等于 0",
      "jakarta.validation.constraints.Size.message": "尺寸必须介于 {0} 和 {1} 之间",
      "primefaces.FileValidator.ALLOW_TYPES": "无效的文件类型。",
      "primefaces.FileValidator.ALLOW_TYPES_detail": "无效的文件类型：'{0}'。允许的类型：'{1}'。",
      "primefaces.FileValidator.FILE_LIMIT": "超出最大文件数。",
      "primefaces.FileValidator.FILE_LIMIT_detail": "最大数量：{0}。",
      "primefaces.FileValidator.SIZE_LIMIT": "文件大小无效。",
      "primefaces.FileValidator.SIZE_LIMIT_detail": "文件“{0}”不得大于 {1}。",
    },
  });
  PrimeFaces.locales["zh_CN"] = PrimeFaces.locales["zh"];

  /* Traditional Chinese (zh_TW) */
  PrimeFaces.locales["zh_TW"] = $.extend(true, {}, PrimeFaces.locales["zh"], zh_TW);
}
